$ git config --global user.name Akarshan

$ git config --global user.email akarshan.internet@gmail.com

	"Setting Username and Email"

$ git config user.name

$ git config user.email

	"Shows name and email"

$ code .

	"Opens VSCode"

$ git init

	"Initializes a git repository"

$ ls -lart

	"Shows all files, including hidden"

$ git status

	"Checks the status of the stages of a repo"

$ git add git.html

	"Adds a file to staging area"

$ git commit

Commit window:
	Initial commit ~"This is just a message"
	
	'esc' :wq

"A message pops up after checking the status again if any remaining files are there that are in the folder but not in git i.e. tree is not clean"

$ git add GitNotes.txt

$ git commit
	"Same cycle with a message"
	
$ git status

"Tree clean"

$ touch about.html

	"Creates new file from scratch"	

$ touch basic.html

$ git status

$ git add -A

	"Adds all files to staging area"

$ git status

	"Doing changes in about"

$ git status

	"Warning with some branches modified means unmodified code in staging area."

$ git add -A

	"Changes updated"

$ git status

$ git commit -m "Added more notes"

	"Immediately commits with opening vim editor"

$ git status

	"After changing something in another file"

$ git checkout basic.html

	"Updated and undo changes with last commit"

$ git checkout -f

	"Undo all file changes"

$ git log

	"Information about changes"

$ git log -p -2

	"Tells last 2 changes, Press q to exit"

$ clear
	
	"Clears the console"

$ git diff
	
	"Shows difference between the files in working and staging area"

$ git diff --staged

	"Shows difference between staging and commited area"

$ git commit -a -m "Commit without staging"
	
	"Commits without staging"

$ ls

	"Lists all files"

$ touch waste.html

	"Adding a wasted file"

$ git add -A
	
	"Tracking is important"

$ git commit -a -m "Added waste"

	"Commiting waste"

$ git rm waste.html

	"Removes and deletes file from working and staging area both"

$ git rm --cached waste.html 

	"Removes from staging area only"

$ git status -s

	"short summary of changes"

$ touch .gitignore

	"Keeps unwanted files aside"

$ touch mylogs.log

	"Now write the file name with ext in gitignore file to ignore the file"
	"Write / before file name if only the folder with gitignore has to ignore that file"
	"*.log to ignore all log files"
	"/ means folder path"

$ git branch this1

	"Creates a new branch in a repo"

$ git branch 

	"Shows current and available branches"

$ git checkout this1

	"Switches to the said branch"

	"After commiting some stuff in this branch"

$ git merge this1

	"Merges said branch with master branch"

$ git checkout -b this2

	"Creates and switches to a new branch"

	"We can create/manipulate functions and features to any branch, changes are done like so as well."

$ git remote add origin *URL here*

	"Addes a remote repo and calls it origin"

$ git remote

	"Tells the working fetch/push repo"

$ git remote -v

	"Push/Fetch details"

$ git push origin master

	"Pushes content of master branch to origin repo that is from local to remote repo"

	"SSH and GPG keys allowing github account access our system"
	"After following ssh key commands and acces done"

$ git remote set-url origin *New URL*
	
	"Changes URL for origin"

$ git push -u origin master
	
	"Pushes local repo to remote repo that is copies files to github account"

$ git push -u origin this2

	"Pushes this2 branch content to repo"

CLONING:

$ git clone *URL* *folder name*

	"Clones a github repo"
